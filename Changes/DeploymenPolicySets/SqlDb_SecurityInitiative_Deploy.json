{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "topLevelManagementGroupPrefix": {
      "type": "String",
      "metadata": {
        "description": "Provide the top level managementgroup where all custom policies definition are created. Initiative could use custom policy definition"
      }
    }
  },
  "variables": {
    "scope": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Authorization/policySetDefinitions",
      "apiVersion": "2019-09-01",
      "name": "Deploy-Sql-Security",
      "properties": {
        "description": "Deploy auditing, Alert, TDE and SQL vulnerability to SQL Databases when it not exist in the deployment",
        "displayName": "Deploy SQL Database built-in SQL security configuration",
        "parameters": {
          "vulnerabilityAssessmentsEmail": {
            "metadata": {
              "description": "The email address to send alerts",
              "displayName": "The email address to send alerts"
            },
            "type": "String"
          },
          "vulnerabilityAssessmentsStorageID": {
            "metadata": {
              "description": "The storage account ID to store assessments",
              "displayName": "The storage account ID to store assessments"
            },
            "type": "String"
          },
          "SqlDbTdeDeploySqlSecurityEffect": {
            "type": "String",
            "defaultValue": "DeployIfNotExists",
            "allowedValues": [
              "DeployIfNotExists",
              "Disabled"
            ],
            "metadata": {
              "displayName": "Deploy SQL Database Transparent Data Encryption ",
              "description": "Deploy the Transparent Data Encryption when it is not enabled in the deployment"
            }
          },
          "SqlDbSecurityAlertPoliciesDeploySqlSecurityEffect": {
            "type": "String",
            "defaultValue": "DeployIfNotExists",
            "allowedValues": [
              "DeployIfNotExists",
              "Disabled"
            ],
            "metadata": {
              "displayName": "Deploy SQL Database security Alert Policies configuration with email admin accounts",
              "description": "Deploy the security Alert Policies configuration with email admin accounts when it not exist in current configuration"
            }
          },
          "SqlDbAuditingSettingsDeploySqlSecurityEffect": {
            "type": "String",
            "defaultValue": "DeployIfNotExists",
            "allowedValues": [
              "DeployIfNotExists",
              "Disabled"
            ],
            "metadata": {
              "displayName": "Deploy SQL database auditing settings",
              "description": "Deploy auditing settings to SQL Database when it not exist in the deployment"
            }
          },
          "SqlDbVulnerabilityAssessmentsDeploySqlSecurityEffect": {
            "type": "String",
            "defaultValue": "DeployIfNotExists",
            "allowedValues": [
              "DeployIfNotExists",
              "Disabled"
            ],
            "metadata": {
              "displayName": "Deploy SQL Database vulnerability Assessments",
              "description": "Deploy SQL Database vulnerability Assessments when it not exist in the deployment. To the specific  storage account in the parameters"
            }
          }
        },
        "policyDefinitionGroups": null,
        "policyDefinitions": [
          {
            "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde')]",
            "policyDefinitionReferenceId": "SqlDbTdeDeploySqlSecurity",
            "parameters": {
              "effect": {
                "value": "[[parameters('SqlDbTdeDeploySqlSecurityEffect')]"
              }
            }
          },
          {
            "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies')]",
            "policyDefinitionReferenceId": "SqlDbSecurityAlertPoliciesDeploySqlSecurity",
            "parameters": {
              "effect": {
                "value": "[[parameters('SqlDbSecurityAlertPoliciesDeploySqlSecurityEffect')]"
              }
            }
          },
          {
            "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings')]",
            "policyDefinitionReferenceId": "SqlDbAuditingSettingsDeploySqlSecurity",
            "parameters": {
              "effect": {
                "value": "[[parameters('SqlDbAuditingSettingsDeploySqlSecurityEffect')]"
              }
            }
          },
          {
            "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments')]",
            "policyDefinitionReferenceId": "SqlDbVulnerabilityAssessmentsDeploySqlSecurity",
            "parameters": {
              "effect": {
                "value": "[[parameters('SqlDbVulnerabilityAssessmentsDeploySqlSecurityEffect')]"
              },
              "vulnerabilityAssessmentsEmail": {
                "value": "[[parameters('vulnerabilityAssessmentsEmail')]"
              },
              "vulnerabilityAssessmentsStorageID": {
                "value": "[[parameters('vulnerabilityAssessmentsStorageID')]"
              }
            }
          }
        ],
        "metadata": {
          "version": "1.0.0",
          "category": "SQL"
        }
      }
    }
  ]
}
